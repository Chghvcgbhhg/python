STRING:
1) Write a  Python program to calculate the length of a string
def string_length(str1):
  count = 0
  for char in str1:
    count += 1
  return count 
print(string_length("pythoncompilor"))
OUTPUT:14

2)Write a Python program to count the number of characters (character frequency) in a string
def char_frequency(str1):
  dict = {}
  for n in str1:
    keys = dict.keys()
    if n in keys:
      dict[n] += 1
    else:
        dict[n] = 1
  return dict
print(char_frequency("pythoncompilor"))
OUTPUT:{'p': 2, 'y': 1, 't': 1, 'h': 1, 'o': 3, 'n': 1, 'c': 1, 'm': 1, 'i': 1, 'l': 1, 'r': 1}

3)Write a  Python program to get a string made of the first 2 and last 2 characters of a given string. If the string length is less than 2, return the empty string instead.
def string_both_ends(str):
    if len(str) < 2:
        return''
    return str[0:2] + str[-2:]
print(string_both_ends('w3resource'))
print(string_both_ends('w3'))          
print(string_both_ends('w'))   
OUTPUT:
w3ce
w3w3

4)Write a  Python program to get a string from a given string where all occurrences of its first char have been changed to '$', except the first char itself.
def change_char(str1):
    char = str1[0]
    str1 = str1.replace(char, '$')
    str1 = char + str1[1:]
    return str1
print(change_char('restart'))  
OUTPUT:resta$t

5) Write a  Python program to get a single string from two given strings, separated by a space and swap the first two characters of each string.
def chars_mix_up(a, b):
    new_a = b[:2] + a[2:]
    new_b = a[:2] + b[2:]
    return new_a + ' ' + new_b
print(chars_mix_up('abc', 'xyz'))
OUTPUT:xyc abz

LIST:
1) Write a  Python program to sum all the items in a list.
def sum_list(items):
    sum_numbers = 0
    for x in items:
        sum_numbers += x
    return sum_numbers
print(sum_list([1, 2, -8]))
OUTPUT:-5

2)Write a  Python program to multiply all the items in a list.
def multiply_list(items):
    tot = 1
    for x in items:
        tot *= x
    return tot
print(multiply_list([1, 2, -8]))
OUTPUT:-16

3) Write a Python program to get the largest number from a list
def max_num_in_list(list):
    max = list[0]
    for a in list:
        if a > max:
            max = a
    return max
print(max_num_in_list([1, 2, -8, 0]))
OUTPUT:-8

4)Write a Python program to get the smallest number from a list.
def smallest_num_in_list(list):
    min = list[0]
    for a in list:
            min = a
    return min
print(smallest_num_in_list([1, 2, -8, 0])) 
OUTPUT:0

5)Write a Python program to count the number of strings from a given list of strings. The string length is 2 or more and the first and last characters are the same
def match_words(words):
    ctr = 0
    for word in words:
        if len(word) > 1 and word[0] == word[-1]:
            ctr += 1
    return ctr
print(match_words(['abc', 'xyz', 'aba', '1221']))
OUTPUT:2

DICTIONARY:

1)Write a Python  script to sort (ascending and descending) a dictionary by value.
import operator
d = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}
print('Original dictionary : ',d)
sorted_d = sorted(d.items(), key=operator.itemgetter(1))
print('Dictionary in ascending order by value : ',sorted_d)
sorted_d = dict( sorted(d.items(), key=operator.itemgetter(1), reverse=True))
print('Dictionary in descending order by value : ',sorted_d)  
OUTPUT:
Original dictionary :  {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}
Dictionary in ascending order by value :  [(0, 0), (2, 1), (1, 2), (4, 3), (3, 4)]
Dictionary in descending order by value :  {3: 4, 4: 3, 1: 2, 2: 1, 0: 0}

2) Write a Python  script to add a key to a dictionary.
d = {0: 10, 1: 20}
print(d)
d.update({2: 30})
print(d) 
OUTPUT:
{0: 10, 1: 20}
{0: 10, 1: 20, 2: 30}

3)Write a  Python script to concatenate the following dictionaries to create a new one.
dic1 = {1: 10, 2: 20}
dic2 = {3: 30, 4: 40}
dic3 = {5: 50, 6: 60}
dic4 = {}
for d in (dic1, dic2, dic3):
    dic4.update(d)
print(dic4) 
OUTPUT:
{1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}

4)Write a  Python script to check whether a given key already exists in a dictionary
d = {1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}
def is_key_present(x):
    if x in d:
        print('Key is present in the dictionary')
    else:
        print('Key is not present in the dictionary')
is_key_present(5)
is_key_present(9) 
OUTPUT:
Key is present in the dictionary
Key is not present in the dictionary

5)Write a Python program to iterate over dictionaries using for loops.
d = {'x': 10, 'y': 20, 'z': 30} 
for dict_key, dict_value in d.items():
    print(dict_key, '->', dict_value)	
OUTPUT:
x -> 10
y -> 20
z -> 30

TUPLE:

1) Write a  Python program to create a tuple.
x = ()
print(x)
tuplex = tuple()
print(tuplex) 
OUTPUT:
()
()

2)Write a  Python program to create a tuple with different data types
tuplex = ("tuple", False, 3.2, 1)
print(tuplex)
OUTPUT:
('tuple', False, 3.2, 1)

3) Write a Python program to create a tuple of numbers and print one item.
tuplex = 5, 10, 15, 20, 25
print(tuplex)
tuplex = 5,
print(tuplex)
OUTPUT:
(5, 10, 15, 20, 25)
(5,)

4) Write a Python program to unpack a tuple into several variables
tuplex = 4, 8, 3
print(tuplex)
n1, n2, n3 = tuplex
print(n1 + n2 + n3)
n1, n2, n3, n4 = tuplex
OUTPUT:
(4, 8, 3)
15

5)Write a Python program to add an item to a tuple
tuplex = (4, 6, 2, 8, 3, 1)
print(tuplex)
tuplex = tuplex + (9,)
print(tuplex)
tuplex = tuplex[:5] + (15, 20, 25) + tuplex[:5]
print(tuplex)
listx = list(tuplex)
listx.append(30)
tuplex = tuple(listx)
print(tuplex) 
OUTPUT:
(4, 6, 2, 8, 3, 1)
(4, 6, 2, 8, 3, 1, 9)
(4, 6, 2, 8, 3, 15, 20, 25, 4, 6, 2, 8, 3)
(4, 6, 2, 8, 3, 15, 20, 25, 4, 6, 2, 8, 3, 30)

SETS:

1)

2)
3)
4)
5)













